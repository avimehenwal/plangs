(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{589:function(t,e,a){"use strict";a.r(e);var s=a(7),n=function(t){t.options.__data__block__={mermaid_1a962853:'graph LR\nC([Machine Code]):::orange\nsubgraph JIT_Compiler\n  A(Baseline Compiler):::blue\n  B(Optimizing Compiler):::purple\nend\nA -- HOT function--\x3e B\nB -- RE compiled --\x3e A\nA & B --\x3e C\n\nclassDef green fill:#1f9,stroke-width:0px;\nclassDef orange fill:#ff9a76,stroke-width:0px;\nclassDef yellow fill:#FFE873,stroke-width:0px;\nclassDef blue fill:#b8d4ff,stroke-width:0px;\nclassDef purple fill:#f9f,stroke:#333,stroke-width:0px;\n\nclick A "https://www.wikipedia.org/" "Click to open wikipedia"\n',mermaid_382ee245:'graph LR\nsubgraph TC39\n  A(Standard):::purple\nend\nB((JS Engine)):::green\nC(bytecode):::blue\n\nA -- implement --\x3e B -- compile --\x3e C\n\nclassDef green fill:#1f9,stroke-width:0px;\nclassDef orange fill:#f96,stroke-width:0px;\nclassDef yellow fill:#FFE873,stroke-width:0px;\nclassDef blue fill:#b8d4ff,stroke-width:0px;\nclassDef purple fill:#f9f,stroke:#333,stroke-width:0px;\n\nclick A "https://www.wikipedia.org/" "Click to open wikipedia"\n',mermaid_64a56eae:'graph TD\nA(JS source code):::yellow\nB(Parser):::orange\nD{Ignition}:::blue\nE(Bytecode):::yellow\nF(TurboFan):::green\nG(Optimized machine code):::purple\n\nA --\x3e B -- AST --\x3e D --\x3e E\nF --\x3e G\nD ==> F\nF ==> D\nG -.- E\n\nclassDef green fill:#1f9,stroke-width:0px;\nclassDef orange fill:#f96,stroke-width:0px;\nclassDef yellow fill:#FFE873,stroke-width:0px;\nclassDef blue fill:#b8d4ff,stroke-width:0px;\nclassDef purple fill:#f9f,stroke:#333,stroke-width:0px;\n\nclick A "https://www.wikipedia.org/" "Click to open wikipedia"\n'}},r=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"js-engine"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js-engine"}},[t._v("#")]),t._v(" 🎡 JS Engine")]),t._v(" "),a("TagLinks"),t._v(" "),a("blockquote",[a("p",[t._v("Really really low level javascript stuff")])]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_1a962853",graph:t.$dataBlock.mermaid_1a962853}}),a("ul",[a("li",[a("code",[t._v("v8")]),t._v(" is being built in germany for the most part")]),t._v(" "),a("li",[t._v("Doesnt matter if you write in "),a("strong",[t._v("browser")]),t._v(", "),a("strong",[t._v("nodejs")]),t._v(" or "),a("strong",[t._v("IoT")]),t._v(" device, everything passes through engine")]),t._v(" "),a("li",[t._v("Lots have been changes in past 20 years")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("js Engines")]),t._v(" "),a("th",[t._v("Used In")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("Chakra")]),t._v(" "),a("td",[t._v("Edge")])]),t._v(" "),a("tr",[a("td",[t._v("v8")]),t._v(" "),a("td",[t._v("nodejs, electron")])]),t._v(" "),a("tr",[a("td",[t._v("SpiderMonkey")]),t._v(" "),a("td",[t._v("Firefox")])]),t._v(" "),a("tr",[a("td",[t._v("DuctTape")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("JerryScript")]),t._v(" "),a("td",[t._v("IoT")])])])]),t._v(" "),a("ul",[a("li",[t._v("NodeJs default build is with "),a("code",[t._v("v8")]),t._v(", but there are builds with chakra and spiderMonkey as well")]),t._v(" "),a("li",[t._v("Electron is Chromium and v8")]),t._v(" "),a("li",[t._v("Js is defined by "),a("strong",[t._v("ECMAScript standard")]),t._v(" by "),a("strong",[t._v("TC39 committee")])])]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_382ee245",graph:t.$dataBlock.mermaid_382ee245}}),a("ul",[a("li",[t._v("Dynamic | statically typed\n"),a("ul",[a("li",[t._v("faster, hence good for prototyping")]),t._v(" "),a("li",[t._v("do not have to worry about types all the time while writing s/w")])])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// javascript")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// C++")]),t._v("\nint x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("17")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h2",{attrs:{id:"objects"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#objects"}},[t._v("#")]),t._v(" Objects")]),t._v(" "),a("ul",[a("li",[t._v("Can add / delete anytime, do not have to declare beforehand")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #region snippet")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nobj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("z "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'z'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("hasOwnProperty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// false")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// #region snippet")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")])])])]),a("dl",[a("dt",[t._v("Why "),a("abbr",{attrs:{title:"Javascript Object Notation, standard 5"}},[t._v("JSON")]),t._v(" is good?")]),t._v(" "),a("dd",[a("p",[t._v("sent over network all the time. API responses")]),t._v(" "),a("p",[t._v("Its hard to know the structure / shape of "),a("abbr",{attrs:{title:"Javascript Object Notation, standard 5"}},[t._v("JSON")]),t._v(" at clients so dynamically types\nlanguage makes sense. Hence javascript Objects")]),t._v(" "),a("p",[t._v("But it supporting dynimically types makes compiler harder")])])]),t._v(" "),a("ul",[a("li",[t._v("Generate code Just In Time JIT, not Ahead Of Time AOT like in C++\n"),a("ul",[a("li",[t._v("JIT compilation is lazy")]),t._v(" "),a("li",[t._v("In C++, there are 2 steps\n"),a("ul",[a("li",[t._v("first "),a("RouterLink",{attrs:{to:"/javascript/guide/compiler.html"}},[t._v("compiler")]),t._v(" it then run it")],1)])]),t._v(" "),a("li",[t._v("In js, there is only 1 step")])])]),t._v(" "),a("li",[t._v("Still considering JS is synamically typed, its pretty faster\n"),a("ul",[a("li",[t._v("How this improvements are made?")]),t._v(" "),a("li",[t._v("Hot functions are recompiled to make them faster")])])])]),t._v(" "),a("p",[t._v("Compilation stages, Compiler Pipeline")]),t._v(" "),a("Mermaid",{attrs:{id:"mermaid_64a56eae",graph:t.$dataBlock.mermaid_64a56eae}}),a("p",[t._v("In v8 Engine\nBaseline Compiler = Ignition Interpreter\nOptimizing Compiler = TurboFan")]),t._v(" "),a("p",[t._v("In SPiderMonkey, Optimizing compiler is IronMonkey")]),t._v(" "),a("p",[t._v("Safari has 2 low-level interpreter")]),t._v(" "),a("ul",[a("li",[t._v("Optimizing compiler uses previously seen type information")]),t._v(" "),a("li",[t._v("If we change the types all the time, then good optimized code cannot be generated\n"),a("ul",[a("li",[t._v("if it is already generated, it needs to be de-optimized, extra work")])])]),t._v(" "),a("li",[t._v("In js we use property access all the time, but its fairly compilcated for the compiler\n"),a("ul",[a("li",[t._v("How compiler deals with property chains?")]),t._v(" "),a("li",[t._v("compiler doesnt know anythign about "),a("code",[t._v("obj.x")])]),t._v(" "),a("li",[t._v("where is this x?")]),t._v(" "),a("li",[t._v("Does this object has an x?")]),t._v(" "),a("li",[t._v("Is it under prototype chain?")]),t._v(" "),a("li",[t._v("Memeory address for x?")])])]),t._v(" "),a("li",[t._v("How objects are represented internally?\n"),a("ul",[a("li",[t._v("Transitioning over higher types progressively as new data is seen")]),t._v(" "),a("li",[t._v("we can change types any time want, but internally compiler keeps track of types")])])])]),t._v(" "),a("p",[t._v("Empty literal -> literal:x --\x3e obj:x obj:y")]),t._v(" "),a("ul",[a("li",[t._v("in ES6 new syntax for using a variable as a key in Object\n"),a("ul",[a("li",[t._v("much slower than ES5 ci=ounterpart,")]),t._v(" "),a("li",[t._v("ES5 have to make the literal")])])]),t._v(" "),a("li",[t._v("optimize it for fast pass")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ES6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("ul",[a("li",[a("mark",[t._v("Try to write as much statically types js as possible, its best for your compiler")])]),t._v(" "),a("li",[t._v('C++ treats variables as locations in memory. Javascript treats variables ("properties") as hashmap-like entries within an object. Javascript programming feels like the manipulation of a large, dynamic property-tree structure.')])]),t._v(" "),a("p",[t._v("String values are not implementation dependent, according the ECMA-262 3rd Edition Specification, each character represents a single 16-bit unit of UTF-16 text:")]),t._v(" "),a("p",[t._v('Would you agree that the statement "From a compiler\'s perspective, the best thing we can do is to write code that looks like it is statically typed", can be used as an argument in favour of '),a("RouterLink",{attrs:{to:"/javascript/guide/typescript.html"}},[t._v("TypeScript")]),t._v(", which as I understand it naturally encourages us to write code that looks like it is statically typed. Hence, does writing our code using "),a("RouterLink",{attrs:{to:"/javascript/guide/typescript.html"}},[t._v("TypeScript")]),t._v(" make it more likely that the resulting JavaScript code can be optimised in a way that increases performance?")],1),t._v(" "),a("p",[t._v('Using that argument, can it therefore be inferred that "using '),a("RouterLink",{attrs:{to:"/javascript/guide/typescript.html"}},[t._v("TypeScript")]),t._v(' makes our apps faster"?')],1),t._v(" "),a("h2",{attrs:{id:"v8-flags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#v8-flags"}},[t._v("#")]),t._v(" 🏴 V8 Flags")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("v8 flags")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("--print-opt-code")])]),t._v(" "),a("td",[t._v("code generated by optimizing compiler")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("--print-bytecode")])]),t._v(" "),a("td",[t._v("bytecode geenrated by interpreter")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("--trace-ic")])]),t._v(" "),a("td",[t._v("different object types a call sites encounters")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("--trace-opt")]),t._v(", "),a("code",[t._v("--trace-depot")])]),t._v(" "),a("td",[t._v("which functions are (de)optimized")])])])]),t._v(" "),a("Footer")],1)}),[],!1,null,null,null);"function"==typeof n&&n(r);e.default=r.exports}}]);