(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{644:function(t,a,e){"use strict";e.r(a);var s=e(7),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"flutter-state-management"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flutter-state-management"}},[t._v("#")]),t._v(" Flutter State Management")]),t._v(" "),e("TagLinks"),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.didierboelens.com/2018/08/reactive-programming-streams-bloc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Reactive Programming Streams - BLoC Patern"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("cubit is now merged into bloc library")]),t._v(" "),e("h2",{attrs:{id:"bloc-vs-flutter-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bloc-vs-flutter-block"}},[t._v("#")]),t._v(" BLoC vs flutter_block")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://bloclibrary.dev/#/gettingstarted",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://bloclibrary.dev/#/gettingstarted"),e("OutboundLink")],1)]),t._v(" "),e("ol",[e("li",[t._v("BloC Architecture")]),t._v(" "),e("li",[t._v("BloC context")]),t._v(" "),e("li",[t._v("BloC Testing")])]),t._v(" "),e("h2",{attrs:{id:"why-bloc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-bloc"}},[t._v("#")]),t._v(" Why BLoC?")]),t._v(" "),e("blockquote",[e("p",[t._v("App should be able to handle "),e("strong",[t._v("EVERY interaction")])])]),t._v(" "),e("ul",[e("li",[t._v("Business Logic Component , pattern created by google for presentation layer")]),t._v(" "),e("li",[t._v("App should have a state for EVERY possible Everything\n"),e("ul",[e("li",[t._v("if their is not Internet, show them")]),t._v(" "),e("li",[t._v("if data could not be fetched, show them it (re)-trying")])])]),t._v(" "),e("li",[t._v("STREAMS are the foundation of BLoC\n"),e("ul",[e("li",[t._v("Asynchronous code sent in parts")])])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("note")]),t._v(" "),e("p",[t._v("GOOD Application must have a valid STATE VALUE at all times.")]),t._v(" "),e("p",[t._v("A "),e("strong",[t._v("StatefulWidget")]),t._v(" does not scale to larger applications. The BLOC pattern does.")])]),t._v(" "),e("h2",{attrs:{id:"why-streams"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#why-streams"}},[t._v("#")]),t._v(" Why Streams?")]),t._v(" "),e("div",{staticClass:"language-dart extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[t._v("Stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("int"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("someStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async*")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("int i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"SENT number = "')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Future"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delayed")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Duration")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("seconds"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("yield")]),t._v(" i"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("List"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("string"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" args"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  Stream"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("int"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" stream "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("boatStream")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("receivedData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("print")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Recieved number"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" receivedData"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"cubit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cubit"}},[t._v("#")]),t._v(" Cubit")]),t._v(" "),e("ul",[e("li",[t._v("is a special type of Stream component which updates UI on state change")]),t._v(" "),e("li",[t._v("emit event on stream using yield")]),t._v(" "),e("li",[t._v("cubit is a component based of some functions\n"),e("ul",[e("li",[t._v("functions that are not part of the stream")]),t._v(" "),e("li",[t._v("cubit only emits streams of states to UI")])])]),t._v(" "),e("li",[t._v("you can subscribe and listen to cubit states changes in components")]),t._v(" "),e("li",[t._v("BLoC also recieves stream of events and emits stream of states")]),t._v(" "),e("li",[t._v("To use BLoc or cubit, you first have to declare it.")])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("difference")]),t._v(" "),e("th",[t._v("description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("Cubit")]),t._v(" "),e("td",[t._v("streaming states + Functions events that are NOT streams")])]),t._v(" "),e("tr",[e("td",[t._v("BloC")]),t._v(" "),e("td",[t._v("streaming states + Streaming events")])])])]),t._v(" "),e("h2",{attrs:{id:"bloc-widget"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#bloc-widget"}},[t._v("#")]),t._v(" BLoC Widget")]),t._v(" "),e("ul",[e("li",[t._v("use BlocProvider Widget when it has to be used at multiple places\n"),e("ul",[e("li",[t._v("Dependency Injection widget")]),t._v(" "),e("li",[t._v("same idea as React.contenxt Provide API")])])]),t._v(" "),e("li",[t._v("Wrap the "),e("strong",[t._v("EXACT")]),t._v(" part to be re-built inside the "),e("code",[t._v("BlocBuilder")])])]),t._v(" "),e("h3",{attrs:{id:"flutter-bloc-concepts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flutter-bloc-concepts"}},[t._v("#")]),t._v(" Flutter BloC Concepts")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("bloc")]),t._v(" "),e("th",[t._v("description")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("BlockProvider")]),t._v(" "),e("td",[t._v("Accessable with a Widget tree, Dependency Injection in BloC Tree")])]),t._v(" "),e("tr",[e("td",[t._v("BlockBuilder")]),t._v(" "),e("td",[t._v("re build the UI on state change")])]),t._v(" "),e("tr",[e("td",[t._v("BlockListener")]),t._v(" "),e("td",[t._v("only listen for change, single time unlike BlockBuilder")])]),t._v(" "),e("tr",[e("td",[t._v("BlocConsumer")]),t._v(" "),e("td",[t._v("mixture of BlockListener and BlockProvider")])])])]),t._v(" "),e("ul",[e("li",[t._v("BlockProvider are created lazily")]),t._v(" "),e("li",[t._v("to access use "),e("code",[t._v("BlockProvider.of<myCubit>(context).myFunction();")])]),t._v(" "),e("li",[t._v("Annotate required sates as "),e("code",[t._v("@required")])]),t._v(" "),e("li",[t._v("Wrap only the part yu want to update inside "),e("code",[t._v("BlockBuilder<myCubit, myState>()")])]),t._v(" "),e("li",[e("code",[t._v("BlockListener<myCubit, myState>(listener: () {})")]),t._v(" on top of BlockBuilder\n"),e("ul",[e("li",[e("code",[t._v("BlocConsumer(lstener: ..., builder: ...)")])]),t._v(" "),e("li",[t._v("The listener is guaranteed to only be called once for each state change unlike the builder in BlocBuilder.")])])]),t._v(" "),e("li",[t._v("Repository -> classes which provides dart to Data Layer DAL\n"),e("ul",[e("li",[t._v("transformations like filter, sort before passing data to BloC")])])]),t._v(" "),e("li",[t._v("Local vs Route BloC Access")])]),t._v(" "),e("h2",{attrs:{id:"steps"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#steps"}},[t._v("#")]),t._v(" Steps")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("When to BloC?")]),t._v(" "),e("p",[t._v("Every dynamic feature in app should have its own BloC")])]),t._v(" "),e("ol",[e("li",[t._v("Define a block by overriding its methods and then initialize it by calling its super")]),t._v(" "),e("li",[t._v("Register Events on BloC using "),e("code",[t._v("on")]),t._v(" API\n"),e("ol",[e("li",[t._v("define state changes in "),e("code",[t._v("on")]),t._v(" callback function which accepts "),e("code",[t._v("event")]),t._v(" and "),e("code",[t._v("emit")])]),t._v(" "),e("li",[t._v("modified states changes are "),e("code",[t._v("emitted")])])])]),t._v(" "),e("li",[t._v("Using the Block in UI Widgets\n"),e("ol",[e("li",[t._v("BlockProvide creates a instance of a bloc and all it's chold have access")]),t._v(" "),e("li",[t._v("create an instance of BlocComponent as "),e("code",[t._v("final")]),t._v(" and then call events on it using "),e("code",[t._v("add")]),t._v(" API")]),t._v(" "),e("li",[t._v("wait for events to deliver a response "),e("code",[t._v("await Future.delayed(Duration.zero)")])])])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("wait for evnt-loop")]),t._v(" "),e("p",[e("code",[t._v("await Future.delayed(Duration.zero)")]),t._v(" is added to ensure we wait for the\nnext event-loop iteration (allowing the EventHandler to process the event).")])]),t._v(" "),e("ol",{attrs:{start:"4"}},[e("li",[t._v("For RT subscriptions to changes, use Streams >> Futures")])]),t._v(" "),e("div",{staticClass:"language-dart extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[t._v("Future"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("async")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" bloc "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("CounterBloc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" subscription "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bloc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("stream"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("print"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 1")]),t._v("\n  bloc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("Increment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" Future"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("delayed")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Duration"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("zero"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" subscription"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("cancel")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("await")]),t._v(" bloc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("close")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),e("h2",{attrs:{id:"enterprise-app-source-organization"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#enterprise-app-source-organization"}},[t._v("#")]),t._v(" Enterprise App source organization")]),t._v(" "),e("ol",[e("li",[t._v("data\n"),e("ol",[e("li",[t._v("models")]),t._v(" "),e("li",[t._v("repositories")]),t._v(" "),e("li",[t._v("dataProviders")])])]),t._v(" "),e("li",[t._v("business_logic\n"),e("ol",[e("li",[t._v("bloc")]),t._v(" "),e("li",[t._v("cubit")])])]),t._v(" "),e("li",[t._v("presentation\n"),e("ol",[e("li",[t._v("widgets")]),t._v(" "),e("li",[t._v("pages")]),t._v(" "),e("li",[t._v("screens")]),t._v(" "),e("li",[t._v("animations")]),t._v(" "),e("li",[t._v("routes")]),t._v(" "),e("li",[t._v("Theme, ColorPallet")])])])]),t._v(" "),e("h2",{attrs:{id:"questions"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#questions"}},[t._v("#")]),t._v(" questions")]),t._v(" "),e("ul",[e("li",[t._v("When to use cubit and when to use bloc?\n"),e("ul",[e("li",[t._v("Each feature should have a cubit or bloc to manage/control it.")]),t._v(" "),e("li",[t._v("Difference is in how they recieve information")]),t._v(" "),e("li",[t._v("cubits are cheaper than bloc")])])]),t._v(" "),e("li",[t._v("Should I have a BLoC for each UI componet?\n"),e("ul",[e("li",[t._v("Having multiple (many) instances of same BLoC is a terrible idea")])])]),t._v(" "),e("li",[t._v("What is repository in flutter?\n"),e("ul",[e("li",[t._v("communicating with external data-layers , DAL, network-calls, databases etc.")])])]),t._v(" "),e("li",[t._v("How to start building a Application?\n"),e("ul",[e("li",[t._v("start with appdb, or application modal")]),t._v(" "),e("li",[t._v("Application Modal should be "),e("strong",[t._v("independent")]),t._v(" from the source")])])]),t._v(" "),e("li",[t._v("How to structure your source code?\n"),e("ul",[e("li",[t._v("seperate directory for each layer and sub-layer")])])]),t._v(" "),e("li",[t._v("How to make internet connection aware mobile application?\n"),e("ul",[e("li",[t._v("connectivity_plus package")])])])]),t._v(" "),e("h2",{attrs:{id:"build-context"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#build-context"}},[t._v("#")]),t._v(" Build context")]),t._v(" "),e("p",[t._v("Every block must override the "),e("code",[t._v("mapEventToState")]),t._v(" function. This is a generator function, which accepts "),e("code",[t._v("event")]),t._v("\nand returns a stream, that notifies of state change whatever is subscribed to it.\nIn redux world it is reducer.")]),t._v(" "),e("ul",[e("li",[t._v("everything in flutter is a "),e("code",[t._v("Widget")])]),t._v(" "),e("li",[t._v("every widget in flutter has a "),e("code",[t._v("build")]),t._v(" function")]),t._v(" "),e("li",[t._v("every build method is built from a "),e("code",[t._v("context")]),t._v(". So Every widget has its own context")]),t._v(" "),e("li",[t._v("in flutter "),e("code",[t._v("MyApp")]),t._v(" widget is the "),e("code",[t._v("root")]),t._v(" of widget tree of an application")]),t._v(" "),e("li",[t._v("build content ONlY knows about its parent context, bottoms-up, there is no other way")]),t._v(" "),e("li",[t._v("new screens are pushed on widget tree and old routes are "),e("code",[t._v("popped")]),t._v(" out from tree")]),t._v(" "),e("li",[t._v("Use Flutter devtools to visualize widget tree and context")])]),t._v(" "),e("p",[t._v("How multiple context interact with each other?")]),t._v(" "),e("div",{staticClass:"custom-block danger"},[e("p",{staticClass:"custom-block-title"},[t._v("WARNING")]),t._v(" "),e("p",[t._v("Never "),e("strong",[t._v("mutate")]),t._v(" and "),e("strong",[t._v("emit")]),t._v(" state from "),e("mark",[t._v("inside of BLoC.")]),t._v("\nLet UI emit the events")])]),t._v(" "),e("h2",{attrs:{id:"hydrated-block"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hydrated-block"}},[t._v("#")]),t._v(" Hydrated Block")]),t._v(" "),e("ul",[e("li",[t._v("restore app-data/state from localstorage")]),t._v(" "),e("li",[t._v("fast and close to application")]),t._v(" "),e("li",[t._v("uses hive under the-hood which is blazingly fast")])]),t._v(" "),e("h2",{attrs:{id:"debugging-bloc"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#debugging-bloc"}},[t._v("#")]),t._v(" Debugging BLoC")]),t._v(" "),e("ul",[e("li",[t._v("How to override all the "),e("code",[t._v("onChange")]),t._v(", "),e("code",[t._v("onError")]),t._v(", "),e("code",[t._v("onTransition")]),t._v(", "),e("code",[t._v("onEvent")]),t._v(" methods on BLoC ?\n"),e("ul",[e("li",[t._v("onCreated")]),t._v(" "),e("li",[t._v("onClose")])])]),t._v(" "),e("li",[e("code",[t._v("BlocObserver")])])]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("BlocObserver")]),t._v(" "),e("p",[t._v("When we want to be able to do something in response to "),e("strong",[t._v("all Changes")]),t._v(" we can simply create our own BlocObserver.")])]),t._v(" "),e("h2",{attrs:{id:"data-fetching-over-network"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#data-fetching-over-network"}},[t._v("#")]),t._v(" Data Fetching over network")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("data fetching in build method")]),t._v(" "),e("p",[t._v("Although it’s convenient, it’s not recommended to put an API call in a "),e("code",[t._v("build()")]),t._v(" method.")])]),t._v(" "),e("ul",[e("li",[t._v("Make networl call using "),e("code",[t._v("http")]),t._v(" library using Futures is easy, but working with response is hard")]),t._v(" "),e("li",[t._v("Transform http.response --\x3e Dart Object, using Models in repository")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://docs.flutter.dev/cookbook/networking/fetch-data",target:"_blank",rel:"noopener noreferrer"}},[t._v("Flutter data fetching"),e("OutboundLink")],1)]),t._v(" "),e("li",[t._v("Whent to make the netwrk call?\n"),e("ul",[e("li",[t._v("exactly once? "),e("code",[t._v("initState")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("MyApp")]),t._v(" widget becomes "),e("mark",[t._v("stateful")]),t._v(" when app wants data from API on initial load")])])]),t._v(" "),e("li",[t._v("based on event emitted?")])])]),t._v(" "),e("li",[t._v("How to display the data on UI?\n"),e("ul",[e("li",[e("code",[t._v("FutureBuilder")]),t._v(" widget")])])]),t._v(" "),e("li",[t._v("How to use an existing BloC on abother page? "),e("code",[t._v("BlocProvide.value()")]),t._v(" constructor")])]),t._v(" "),e("h3",{attrs:{id:"use-cases"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#use-cases"}},[t._v("#")]),t._v(" Use-cases")]),t._v(" "),e("h4",{attrs:{id:"load-a-new-view-page-on-a-click"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#load-a-new-view-page-on-a-click"}},[t._v("#")]),t._v(" Load a new view/page on a click")]),t._v(" "),e("div",{staticClass:"language-dart extra-class"},[e("pre",{pre:!0,attrs:{class:"language-dart"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MaterialButton")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  onPressed"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    Navigator"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("of")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("MaterialPageRoute")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n        builder"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" BlocProvider"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n          value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("existingCubit")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("     "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NOT A new cubit")]),t._v("\n          value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" BlockProvider"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("of"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourCubitName"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n          child"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("h4",{attrs:{id:"search-and-filter-items-widget"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#search-and-filter-items-widget"}},[t._v("#")]),t._v(" Search and filter items widget")]),t._v(" "),e("p",[t._v("as the user type. Use debounce feature to wait for sometime before making API call")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://levelup.gitconnected.com/github-search-and-bloc-523d51848c68",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://levelup.gitconnected.com/github-search-and-bloc-523d51848c68"),e("OutboundLink")],1)])]),t._v(" "),e("h2",{attrs:{id:"best-practises"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#best-practises"}},[t._v("#")]),t._v(" Best Practises")]),t._v(" "),e("ul",[e("li",[t._v("keep BloC in seperate file for testability")]),t._v(" "),e("li",[t._v("write BloC per feature")])]),t._v(" "),e("h3",{attrs:{id:"sample-repos"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sample-repos"}},[t._v("#")]),t._v(" Sample Repos")]),t._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/TheWCKD/blocFromZeroToHero",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/TheWCKD/blocFromZeroToHero"),e("OutboundLink")],1)])]),t._v(" "),e("Footer")],1)}),[],!1,null,null,null);a.default=n.exports}}]);